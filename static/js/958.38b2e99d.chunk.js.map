{"version":3,"file":"static/js/958.38b2e99d.chunk.js","mappings":"wQAMaA,EAAc,WACzB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdN,GAAW,GAFG,UAGKO,EAAAA,EAAAA,IAAWJ,GAHhB,OAGRK,EAHQ,OAIdN,EAAQM,EAAKP,MAJC,gDAMdQ,QAAQC,IAAI,KAAMC,SANJ,yBAQdX,GAAW,GARG,4EAAH,qDAYfM,GACD,GAAE,CAACH,IAEJ,IAAMS,EAASX,EAAKY,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACtB,gBAAaC,UAAU,YAAvB,UACGD,IACC,gBACEE,IAAG,0CAAqCF,GACxCC,UAAU,aACVE,IAAI,MAGR,uBAAIL,KACJ,uBAAIC,MATGZ,EADa,IAcxB,OACE,gCACGJ,IAAW,SAACqB,EAAA,EAAD,KACZ,eAAIH,UAAU,YAAd,SACqB,IAAlBL,EAAOS,OAAe,wCAA0CT,MAIxE,ECtCD,EARa,WACX,OACE,+BACE,SAAC,EAAD,KAGL,C,sLCJKU,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,gCAIfC,OAAQ,CACNC,QANY,mCAOZC,SAAU,WAIRC,EAAY,mCAAG,WAAMC,GAAN,kGAEMP,EAASQ,IAAI,eAAgB,CAClDL,OAAQ,CACNI,MAAOA,KAJM,uBAETrB,EAFS,EAETA,KAFS,kBAOVA,GAPU,sCASjBC,QAAQsB,MAAM,0BAAd,MATiB,8DAAH,sDAcZC,EAAc,mCAAG,+GAEIV,EAASQ,IAAI,iBAFjB,uBAEXtB,EAFW,EAEXA,KAFW,kBAGZA,GAHY,sCAKnBC,QAAQsB,MAAM,qCAAd,MALmB,8DAAH,qDAUdE,EAAY,mCAAG,WAAM9B,GAAN,kGAEMmB,EAASQ,IAAT,gBAAsB3B,IAF5B,uBAETK,EAFS,EAETA,KAFS,kBAGVA,GAHU,sCAKjBC,QAAQsB,MAAR,sCAA6C5B,EAA7C,WALiB,8DAAH,sDAUZI,EAAU,mCAAG,WAAMJ,GAAN,kGAEQmB,EAASQ,IAAT,gBAAsB3B,EAAtB,aAFR,uBAEPK,EAFO,EAEPA,KAFO,kBAGRA,GAHQ,sCAKfC,QAAQsB,MAAR,kDAAyD5B,EAAzD,WALe,8DAAH,sDAUV+B,EAAU,mCAAG,WAAM/B,GAAN,kGAEQmB,EAASQ,IAAT,gBAAsB3B,EAAtB,aAFR,uBAEPK,EAFO,EAEPA,KAFO,kBAGRA,GAHQ,sCAKfC,QAAQsB,MAAR,kDAAyD5B,EAAzD,WALe,8DAAH,qD","sources":["components/CastDetails/CastDetails.jsx","pages/Cast.jsx","services/api.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/api';\nimport './CastDetails.css';\n\nexport const CastDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const data = await getCredits(id);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  const castes = cast.map(({ id, name, character, profile_path }) => (\n    <li key={id} className=\"cast-item\">\n      {profile_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          className=\"cast-image\"\n          alt=\"\"\n        ></img>\n      )}\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul className=\"cast-list\">\n        {castes.length === 0 ? \"We don't have any cast for this movie\" : castes}\n      </ul>\n    </>\n  );\n};\n\nexport default CastDetails;\n","import { CastDetails } from \"components/CastDetails/CastDetails\";\n\n\nconst Cast = () => {\n  return (\n    <>\n      <CastDetails />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c66f597fbdbbb50c0972dd6c4a492e0e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nconst searchMovies = async query => {\n  try {\n    const { data } = await instance.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nconst getMostPopular = async () => {\n  try {\n    const { data } = await instance.get('movie/popular');\n    return data;\n  } catch (error) {\n    console.error('Error getting most popular movies:', error);\n    throw error;\n  }\n};\n\nconst getMovieById = async id => {\n  try {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n  } catch (error) {\n    console.error(`Error getting movie with ID ${id}:`, error);\n    throw error;\n  }\n};\n\nconst getCredits = async id => {\n  try {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.error(`Error getting credits for movie with ID ${id}:`, error);\n    throw error;\n  }\n};\n\nconst getReviews = async id => {\n  try {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.error(`Error getting reviews for movie with ID ${id}:`, error);\n    throw error;\n  }\n};\n\nexport { searchMovies, getMostPopular, getMovieById, getCredits, getReviews };\n"],"names":["CastDetails","useState","loading","setLoading","cast","setCast","id","useParams","useEffect","fetchCast","getCredits","data","console","log","message","castes","map","name","character","profile_path","className","src","alt","Loader","length","instance","axios","baseURL","params","api_key","language","searchMovies","query","get","error","getMostPopular","getMovieById","getReviews"],"sourceRoot":""}